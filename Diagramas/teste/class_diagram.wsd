@startuml
class Bank {
  + name: string
  + location: string
  + accountList: List<Account>
  + customerList: List<Customer>
  + addCustomer(c: Customer): void
  + addAccount(a: Account): void
  + getCustomerById(id: int): Customer
}

class Customer {
  - id: int
  + name: string
  + address: string
  + email: string
  + phone: string
  + accountList: List<Account>
  + addAccount(a: Account): void
  + getAccountById(id: int): Account
}

abstract class Account {
  - id: int
  + balance: double
  + owner: Customer
  + transactions: List<Transaction>
  + deposit(amount: double): void
  + withdraw(amount: double): void
  + transfer(amount: double, recipient: Account): void
}

class CheckingAccount {
  + overdraftLimit: double
}

class SavingsAccount {
  + interestRate: double
}

class Transaction {
  - id: int
  + date: date
  + amount: double
  + description: string
  + source: Account
  + destination: Account
}

Bank "1" --> "*" Customer
Customer "1" --> "*" Account
Account "1" o-- "*" Transaction

CheckingAccount --|> Account
SavingsAccount --|> Account

@enduml
